name: Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Check dependencies in cache 
        id: yarn-cache 
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Initializing dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run:  yarn install

      - name: Build the repository
        run: |
          yarn build

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_KEY }}

      - name: Deploy to App Engine
        run: gcloud app deploy app.yaml --quiet --project ${{secrets.GCP_PROJECT_ID}}
      
      - name : Create artifact.zip
        # run: git archive --format=zip HEAD -o artifact.zip
        run: |
          apt-get -q update && apt-get -qqy install zip bzip2 gzip
          zip -r ./artifact.zip . -x */.git/*

      
      - id: upload-artifact
        name: Upload artifact file
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: ./artifact.zip
          destination: ${{secrets.GCP_ARTIFACT_BUCKET}}
          credentials: ${{ secrets.GCP_SERVICE_KEY }}

      # - id: deploy
      #   name: Deploy to app engine
      #   uses: google-github-actions/deploy-appengine@main
      #   with:
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}
      # - id: Test URL
      #   run: curl "${{ steps.deploy.outputs.url }}"